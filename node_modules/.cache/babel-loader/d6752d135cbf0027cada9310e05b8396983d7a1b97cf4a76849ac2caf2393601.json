{"ast":null,"code":"var _jsxFileName = \"/Users/yudayouhei/Desktop/MENTA/React/todo-api/react-create-motion/todo-api/src/App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css'; // BootstrapのCSSをインポート\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button'; // React BootstrapのButtonコンポーネントをインポート\nimport Container from 'react-bootstrap/Container'; // React BootstrapのContainerコンポーネントをインポート\nimport Navbar from 'react-bootstrap/Navbar'; // React BootstrapのNavbarコンポーネントをインポート\nimport EditModal from './components/EditModal'; // 分離したEditModalコンポーネントをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://jsonplaceholder.typicode.com/posts'; // テスト用APIのエンドポイント\n\nfunction BasicExample() {\n  _s();\n  const [contents, setContents] = useState([]);\n  const [showModal, setShowModal] = useState(false); // モーダル初期状態を非表示にしておく\n  const [selectedContentId, setSelectedContentId] = useState(null); // 編集ボタンクリック時のidを管理\n  const [editedText, setEditedText] = useState(''); // フォームの状態を管理\n  const [addText, setAddText] = useState(''); // 新規ボタンクリック時のテキストの値を管理\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true); // 保存ボタンの表示状態を管理\n  const [errorMessage, setErrorMessage] = useState(''); // 新規追加時のエラーメッセージの状態を管理\n  const [errorModalMessage, setModalErrorMessage] = useState(''); // 保存時のエラーメッセージの状態を管理\n\n  // 新規追加ボタンクリック時の動作\n  const onClickAdd = async () => {\n    if (addText === \"\") {\n      setErrorMessage('文字が未入力です'); // エラーメッセージを表示\n      console.log('エラー: テキストボックスが空です。');\n      return;\n    }\n    try {\n      console.log('POSTリクエストを送信します...', {\n        title: addText\n      });\n\n      // テスト用APIにPOSTリクエストを送信\n      const response = await axios.post(url, {\n        title: addText\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('POSTリクエスト成功:', response.data);\n\n      // サーバーから返された新しいデータをもとにコンテンツを更新\n      const newContent = {\n        id: response.data.id,\n        // サーバーから返されるIDを使用\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"todo-paragraph\",\n              children: response.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"sm\",\n              onClick: () => handleEdit(response.data.id),\n              children: \"\\u7DE8\\u96C6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleDelete(response.data.id),\n              variant: \"danger\",\n              size: \"sm\",\n              children: \"\\u524A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, response.data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      };\n      setContents([...contents, newContent]);\n      console.log('新しいコンテンツが追加されました:', newContent);\n      setAddText('');\n      setErrorMessage(''); // エラーメッセージをクリア\n    } catch (error) {\n      console.error('POSTリクエストエラー:', error);\n\n      // エラーの詳細な内容をコンソールに表示\n      if (error.response) {\n        console.error('サーバーからのエラー:', error.response.data);\n        console.error('ステータスコード:', error.response.status);\n      } else if (error.request) {\n        console.error('サーバーからのレスポンスがありません:', error.request);\n      } else {\n        console.error('リクエストの設定エラー:', error.message);\n      }\n      setErrorMessage('データの追加に失敗しました。サーバーエラーが発生しました。');\n    }\n  };\n\n  // 指定行をidにて判断し削除\n  const handleDelete = id => {\n    setContents(prevContents => prevContents.filter(content => content.id !== id));\n  };\n\n  // 編集ボタンクリック時の動作\n  const handleEdit = id => {\n    setShowModal(true); // モーダルを表示\n    const contentToEdit = contents.find(content => content.id === id);\n    if (contentToEdit) {\n      const textToEdit = contentToEdit.content.props.children[0].props.children.props.children;\n      setSelectedContentId(id); // 編集対象のコンテンツIDをセット\n      setEditedText(textToEdit); // 編集用テキストをセット\n      setIsSaveButtonVisible(true); // 初期状態でボタンの表示状態を設定\n      setModalErrorMessage(''); // モーダル内のエラーメッセージをクリア\n    }\n  };\n\n  // モーダルを閉じる\n  const handleClose = () => setShowModal(false);\n\n  // 編集内容を保存\n  const handleSave = () => {\n    if (editedText === \"\") {\n      setModalErrorMessage('文字が未入力です'); // エラーメッセージを表示\n      setIsSaveButtonVisible(false); // ボタンを非表示にする\n      return;\n    }\n    setContents(prevContents => prevContents.map(content => content.id === selectedContentId ? {\n      ...content,\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"todo-paragraph\",\n            children: editedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            size: \"sm\",\n            onClick: () => handleEdit(content.id),\n            children: \"\\u7DE8\\u96C6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(content.id),\n            variant: \"danger\",\n            size: \"sm\",\n            children: \"\\u524A\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this)]\n      }, content.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    } : content));\n    setShowModal(false);\n    setModalErrorMessage(''); // エラーメッセージをクリア\n  };\n  const handleAddTextChange = e => setAddText(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"custom-navbar bg-body-tertiary\",\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"navbar-container\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: \"Navbar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: addText,\n          onChange: handleAddTextChange,\n          className: \"add-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickAdd,\n        variant: \"info\",\n        children: \"\\u65B0\\u898F\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos-header\",\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), contents.map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: content.content\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      showModal: showModal,\n      handleClose: handleClose,\n      editedText: editedText,\n      handleChange: e => setEditedText(e.target.value),\n      handleSave: handleSave,\n      isSaveButtonVisible: isSaveButtonVisible,\n      errorModalMessage: errorModalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicExample, \"X5CzkawCLgMqWsjfAzM8j8tW4Sw=\");\n_c = BasicExample;\nexport default BasicExample;\nvar _c;\n$RefreshReg$(_c, \"BasicExample\");","map":{"version":3,"names":["React","useState","axios","Button","Container","Navbar","EditModal","jsxDEV","_jsxDEV","url","BasicExample","_s","contents","setContents","showModal","setShowModal","selectedContentId","setSelectedContentId","editedText","setEditedText","addText","setAddText","isSaveButtonVisible","setIsSaveButtonVisible","errorMessage","setErrorMessage","errorModalMessage","setModalErrorMessage","onClickAdd","console","log","title","response","post","headers","data","newContent","id","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","handleEdit","handleDelete","error","status","request","message","prevContents","filter","contentToEdit","find","textToEdit","props","handleClose","handleSave","map","handleAddTextChange","e","target","value","expand","Brand","href","type","onChange","handleChange","_c","$RefreshReg$"],"sources":["/Users/yudayouhei/Desktop/MENTA/React/todo-api/react-create-motion/todo-api/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'; // BootstrapのCSSをインポート\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button'; // React BootstrapのButtonコンポーネントをインポート\nimport Container from 'react-bootstrap/Container'; // React BootstrapのContainerコンポーネントをインポート\nimport Navbar from 'react-bootstrap/Navbar'; // React BootstrapのNavbarコンポーネントをインポート\nimport EditModal from './components/EditModal'; // 分離したEditModalコンポーネントをインポート\n\nconst url = 'https://jsonplaceholder.typicode.com/posts'; // テスト用APIのエンドポイント\n\nfunction BasicExample() {\n  const [contents, setContents] = useState([]);\n  const [showModal, setShowModal] = useState(false); // モーダル初期状態を非表示にしておく\n  const [selectedContentId, setSelectedContentId] = useState(null); // 編集ボタンクリック時のidを管理\n  const [editedText, setEditedText] = useState(''); // フォームの状態を管理\n  const [addText, setAddText] = useState(''); // 新規ボタンクリック時のテキストの値を管理\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true); // 保存ボタンの表示状態を管理\n  const [errorMessage, setErrorMessage] = useState(''); // 新規追加時のエラーメッセージの状態を管理\n  const [errorModalMessage, setModalErrorMessage] = useState(''); // 保存時のエラーメッセージの状態を管理\n\n  // 新規追加ボタンクリック時の動作\n  const onClickAdd = async () => {\n    if (addText === \"\") {\n      setErrorMessage('文字が未入力です'); // エラーメッセージを表示\n      console.log('エラー: テキストボックスが空です。');\n      return;\n    }\n\n    try {\n      console.log('POSTリクエストを送信します...', { title: addText });\n\n      // テスト用APIにPOSTリクエストを送信\n      const response = await axios.post(url, { title: addText }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      console.log('POSTリクエスト成功:', response.data);\n\n      // サーバーから返された新しいデータをもとにコンテンツを更新\n      const newContent = {\n        id: response.data.id,  // サーバーから返されるIDを使用\n        content: (\n          <div className=\"todo-item\" key={response.data.id}>\n            <div className=\"todo-text\">\n              <p className=\"todo-paragraph\">{response.data.title}</p>\n            </div>\n            <div className=\"todo-buttons\">\n              <Button variant=\"primary\" size=\"sm\" onClick={() => handleEdit(response.data.id)}>\n                編集\n              </Button>{' '}\n              <Button onClick={() => handleDelete(response.data.id)} variant=\"danger\" size=\"sm\">\n                削除\n              </Button>\n            </div>\n          </div>\n        ),\n      };\n\n      setContents([...contents, newContent]);\n      console.log('新しいコンテンツが追加されました:', newContent);\n\n      setAddText('');\n      setErrorMessage(''); // エラーメッセージをクリア\n    } catch (error) {\n      console.error('POSTリクエストエラー:', error);\n\n      // エラーの詳細な内容をコンソールに表示\n      if (error.response) {\n        console.error('サーバーからのエラー:', error.response.data);\n        console.error('ステータスコード:', error.response.status);\n      } else if (error.request) {\n        console.error('サーバーからのレスポンスがありません:', error.request);\n      } else {\n        console.error('リクエストの設定エラー:', error.message);\n      }\n\n      setErrorMessage('データの追加に失敗しました。サーバーエラーが発生しました。');\n    }\n  };\n\n  // 指定行をidにて判断し削除\n  const handleDelete = (id) => {\n    setContents(prevContents => prevContents.filter(content => content.id !== id));\n  };\n\n  // 編集ボタンクリック時の動作\n  const handleEdit = (id) => {\n    setShowModal(true); // モーダルを表示\n    const contentToEdit = contents.find(content => content.id === id);\n    if (contentToEdit) {\n      const textToEdit = contentToEdit.content.props.children[0].props.children.props.children;\n      setSelectedContentId(id); // 編集対象のコンテンツIDをセット\n      setEditedText(textToEdit); // 編集用テキストをセット\n      setIsSaveButtonVisible(true); // 初期状態でボタンの表示状態を設定\n      setModalErrorMessage(''); // モーダル内のエラーメッセージをクリア\n    }\n  };\n\n  // モーダルを閉じる\n  const handleClose = () => setShowModal(false);\n\n  // 編集内容を保存\n  const handleSave = () => {\n    if (editedText === \"\") {\n      setModalErrorMessage('文字が未入力です'); // エラーメッセージを表示\n      setIsSaveButtonVisible(false); // ボタンを非表示にする\n      return;\n    }\n    setContents(prevContents =>\n      prevContents.map(content =>\n        content.id === selectedContentId\n          ? {\n              ...content,\n              content: (\n                <div className=\"todo-item\" key={content.id}>\n                  <div className=\"todo-text\">\n                    <p className=\"todo-paragraph\">{editedText}</p>\n                  </div>\n                  <div className=\"todo-buttons\">\n                    <Button variant=\"primary\" size=\"sm\" onClick={() => handleEdit(content.id)}>\n                      編集\n                    </Button>{' '}\n                    <Button onClick={() => handleDelete(content.id)} variant=\"danger\" size=\"sm\">\n                      削除\n                    </Button>\n                  </div>\n                </div>\n              )\n            }\n          : content\n      )\n    );\n    setShowModal(false);\n    setModalErrorMessage(''); // エラーメッセージをクリア\n  };\n\n  const handleAddTextChange = (e) => setAddText(e.target.value);\n\n  return (\n    <section>\n      <Navbar className=\"custom-navbar bg-body-tertiary\" expand=\"lg\">\n        <Container className=\"navbar-container\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <div className=\"add-section\">\n        <div className=\"input-container\">\n          <input\n            type='text'\n            value={addText}\n            onChange={handleAddTextChange}\n            className=\"add-input\"\n          />\n        </div>\n        <Button onClick={onClickAdd} variant=\"info\">新規追加</Button>\n      </div>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <div className=\"todos-container\">\n        <div className=\"todos-header\">Todos</div>\n        {contents.map((content) => (\n          <div key={content.id}>\n            {content.content}\n          </div>\n        ))}\n      </div>\n      <EditModal\n        showModal={showModal}\n        handleClose={handleClose}\n        editedText={editedText}\n        handleChange={(e) => setEditedText(e.target.value)}\n        handleSave={handleSave}\n        isSaveButtonVisible={isSaveButtonVisible}\n        errorModalMessage={errorModalMessage}\n      />\n    </section>\n  );\n}\n\nexport default BasicExample;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}