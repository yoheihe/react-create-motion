{"ast":null,"code":"var _jsxFileName = \"/Users/yudayouhei/Desktop/MENTA/React/todo-api/react-create-motion/src/App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css'; // BootstrapのCSSをインポート\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'; // React BootstrapのButtonコンポーネントをインポート\nimport Container from 'react-bootstrap/Container'; // React BootstrapのContainerコンポーネントをインポート\nimport Navbar from 'react-bootstrap/Navbar'; // React BootstrapのNavbarコンポーネントをインポート\nimport EditModal from './components/EditModal'; // 分離したEditModalコンポーネントをインポート\nimport axios from 'axios'; // Axiosをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://sample-api.manabupanda.net/api/list'; // テスト用APIのエンドポイント\n\nfunction BasicExample() {\n  _s();\n  const [contents, setContents] = useState([]);\n  const [showModal, setShowModal] = useState(false); // モーダル初期状態を非表示にしておく\n  const [selectedContentId, setSelectedContentId] = useState(null); // 編集ボタンクリック時のidを管理\n  const [editedText, setEditedText] = useState(''); // フォームの状態を管理\n  const [addText, setAddText] = useState(''); // 新規ボタンクリック時のテキストの値を管理\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true); // 保存ボタンの表示状態を管理\n  const [errorMessage, setErrorMessage] = useState(''); // 新規追加時のエラーメッセージの状態を管理\n  const [errorModalMessage, setModalErrorMessage] = useState(''); // 保存時のエラーメッセージの状態を管理\n  const [displayedId, setDisplayedId] = useState(null); // 表示用のIDを管理\n\n  // 新規追加ボタンクリック時の動作\n  const onClickAdd = async () => {\n    if (addText === \"\") {\n      setErrorMessage('文字が未入力です');\n      return;\n    }\n    const id = Date.now(); // クライアント側で一意のIDを生成\n\n    try {\n      const response = await axios.post(url, {\n        id: id,\n        name: addText\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const newContent = {\n        id: response.data.id,\n        name: response.data.name,\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"todo-paragraph\",\n              children: response.data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"sm\",\n              onClick: () => handleEdit(response.data.id, response.data.name),\n              children: \"\\u7DE8\\u96C6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleDelete(response.data.id),\n              variant: \"danger\",\n              size: \"sm\",\n              children: \"\\u524A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, response.data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      };\n      setContents([...contents, newContent]);\n      setAddText('');\n      setErrorMessage('');\n    } catch (error) {\n      console.error('POSTリクエストエラー:', error);\n    }\n  };\n\n  // 削除ボタンクリック時の動作\n  const handleDelete = async id => {\n    try {\n      const deleteUrl = `${url}/${id}`;\n      const response = await axios.delete(deleteUrl);\n      console.log('DELETEリクエスト成功:', response.data);\n      setContents(prevContents => prevContents.filter(content => content.id !== id));\n    } catch (error) {\n      console.error('DELETEリクエストに失敗しました:', error);\n    }\n  };\n\n  // 編集ボタンクリック時の動作\n  const handleEdit = (id, name) => {\n    console.log('編集対象のID:', id);\n    console.log('編集対象の名前:', name);\n    setEditedText(name);\n    setDisplayedId(id);\n    setShowModal(true);\n    setSelectedContentId(id);\n    const contentToEdit = contents.find(content => content.id === id);\n    if (contentToEdit) {\n      setIsSaveButtonVisible(true);\n      setModalErrorMessage(\"\");\n    }\n  };\n\n  // モーダルを閉じる\n  const handleClose = () => setShowModal(false);\n\n  // 編集内容を保存\n  const handleSave = async () => {\n    if (editedText === \"\") {\n      setModalErrorMessage('文字が未入力です');\n      return;\n    }\n\n    // リクエスト前に保存するテキストとURLをコンソールに表示\n    console.log(\"保存されるテキスト:\", editedText); // 送信するテキスト\n    console.log(\"リクエストURL:\", `${url}/${displayedId}`); // リクエストのURL\n\n    try {\n      const response = await axios.post(`${url}/${displayedId}`, {\n        name: editedText\n      });\n      console.log(\"サーバーからのレスポンス:\", response.data); // レスポンス内容をコンソール表示\n\n      setContents(prevContents => prevContents.map(content => content.id === selectedContentId ? {\n        ...content,\n        name: response.data.name,\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"todo-paragraph\",\n              children: response.data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"sm\",\n              onClick: () => handleEdit(content.id, response.data.name),\n              children: \"\\u7DE8\\u96C6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 23\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleDelete(content.id),\n              variant: \"danger\",\n              size: \"sm\",\n              children: \"\\u524A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, content.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }, this)\n      } : content));\n      setEditedText(''); // 編集テキストの入力内容をクリア\n      handleClose();\n    } catch (error) {\n      console.error('POSTリクエストに失敗しました:', error);\n    }\n  };\n\n  // 新規追加時のテキストボックスの入力に応じてエラーメッセージをクリア\n  const handleAddTextChange = e => {\n    setAddText(e.target.value);\n    if (e.target.value !== \"\") {\n      setErrorMessage('');\n    }\n  };\n  const handleChange = e => {\n    const newText = e.target.value;\n    setEditedText(newText);\n    if (newText !== \"\") {\n      setModalErrorMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      onClickAdd();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"custom-navbar bg-body-tertiary\",\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"navbar-container\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: \"Navbar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: addText,\n          onChange: handleAddTextChange,\n          onKeyPress: handleKeyPress,\n          className: \"add-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickAdd,\n        variant: \"info\",\n        children: \"\\u65B0\\u898F\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos-header\",\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), contents.map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: content.content\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [displayedId && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u7DE8\\u96C6\\u5BFE\\u8C61\\u306EID: \", displayedId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }, this), \" \", editedText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u7DE8\\u96C6\\u5BFE\\u8C61\\u306ENAME: \", editedText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 24\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      showModal: showModal,\n      handleClose: handleClose,\n      editedText: editedText,\n      handleChange: handleChange,\n      selectedContentId: selectedContentId,\n      setContents: setContents,\n      handleSave: handleSave,\n      isSaveButtonVisible: isSaveButtonVisible,\n      errorModalMessage: errorModalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicExample, \"xmR0P/w41DzhVQKpqLyA5e9mgos=\");\n_c = BasicExample;\nexport default BasicExample;\nvar _c;\n$RefreshReg$(_c, \"BasicExample\");","map":{"version":3,"names":["React","useState","Button","Container","Navbar","EditModal","axios","jsxDEV","_jsxDEV","url","BasicExample","_s","contents","setContents","showModal","setShowModal","selectedContentId","setSelectedContentId","editedText","setEditedText","addText","setAddText","isSaveButtonVisible","setIsSaveButtonVisible","errorMessage","setErrorMessage","errorModalMessage","setModalErrorMessage","displayedId","setDisplayedId","onClickAdd","id","Date","now","response","post","name","headers","newContent","data","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","handleEdit","handleDelete","error","console","deleteUrl","delete","log","prevContents","filter","contentToEdit","find","handleClose","handleSave","map","handleAddTextChange","e","target","value","handleChange","newText","handleKeyPress","key","expand","Brand","href","type","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["/Users/yudayouhei/Desktop/MENTA/React/todo-api/react-create-motion/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'; // BootstrapのCSSをインポート\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'; // React BootstrapのButtonコンポーネントをインポート\nimport Container from 'react-bootstrap/Container'; // React BootstrapのContainerコンポーネントをインポート\nimport Navbar from 'react-bootstrap/Navbar'; // React BootstrapのNavbarコンポーネントをインポート\nimport EditModal from './components/EditModal'; // 分離したEditModalコンポーネントをインポート\nimport axios from 'axios'; // Axiosをインポート\n\nconst url = 'https://sample-api.manabupanda.net/api/list'; // テスト用APIのエンドポイント\n\nfunction BasicExample() {\n  const [contents, setContents] = useState([]);\n  const [showModal, setShowModal] = useState(false); // モーダル初期状態を非表示にしておく\n  const [selectedContentId, setSelectedContentId] = useState(null); // 編集ボタンクリック時のidを管理\n  const [editedText, setEditedText] = useState(''); // フォームの状態を管理\n  const [addText, setAddText] = useState(''); // 新規ボタンクリック時のテキストの値を管理\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true); // 保存ボタンの表示状態を管理\n  const [errorMessage, setErrorMessage] = useState(''); // 新規追加時のエラーメッセージの状態を管理\n  const [errorModalMessage, setModalErrorMessage] = useState(''); // 保存時のエラーメッセージの状態を管理\n  const [displayedId, setDisplayedId] = useState(null); // 表示用のIDを管理\n\n\n  // 新規追加ボタンクリック時の動作\n  const onClickAdd = async () => {\n    if (addText === \"\") {\n      setErrorMessage('文字が未入力です'); \n      return;\n    }\n\n    const id = Date.now(); // クライアント側で一意のIDを生成\n\n    try {\n      const response = await axios.post(url, {\n        id: id,\n        name: addText,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const newContent = {\n        id: response.data.id, \n        name: response.data.name,\n        content: (\n          <div className=\"todo-item\" key={response.data.id}>\n            <div className=\"todo-text\">\n              <p className=\"todo-paragraph\">{response.data.name}</p>\n            </div>\n            <div className=\"todo-buttons\">\n              <Button variant=\"primary\" size=\"sm\" onClick={() => handleEdit(response.data.id, response.data.name)}>\n                編集\n              </Button>{' '}\n              <Button onClick={() => handleDelete(response.data.id)} variant=\"danger\" size=\"sm\">\n                削除\n              </Button>\n            </div>\n          </div>\n        ),\n      };\n\n      setContents([...contents, newContent]);\n      setAddText(''); \n      setErrorMessage(''); \n\n    } catch (error) {\n      console.error('POSTリクエストエラー:', error);\n    }\n  };\n\n  // 削除ボタンクリック時の動作\n  const handleDelete = async (id) => {\n    try {\n      const deleteUrl = `${url}/${id}`;\n      const response = await axios.delete(deleteUrl);\n      console.log('DELETEリクエスト成功:', response.data);\n\n      setContents(prevContents => prevContents.filter(content => content.id !== id));\n    } catch (error) {\n      console.error('DELETEリクエストに失敗しました:', error);\n    }\n  };\n\n  // 編集ボタンクリック時の動作\n  const handleEdit = (id, name) => {\n    console.log('編集対象のID:', id); \n    console.log('編集対象の名前:', name); \n    setEditedText(name); \n    setDisplayedId(id); \n    setShowModal(true);\n    setSelectedContentId(id); \n\n    const contentToEdit = contents.find(content => content.id === id);\n    if (contentToEdit) {\n      setIsSaveButtonVisible(true); \n      setModalErrorMessage(\"\"); \n    }\n  };\n\n  // モーダルを閉じる\n  const handleClose = () => setShowModal(false);\n\n  // 編集内容を保存\n  const handleSave = async () => {\n\n    if (editedText === \"\") {\n      setModalErrorMessage('文字が未入力です'); \n      return;\n    }\n\n      // リクエスト前に保存するテキストとURLをコンソールに表示\n      console.log(\"保存されるテキスト:\", editedText); // 送信するテキスト\n      console.log(\"リクエストURL:\", `${url}/${displayedId}`); // リクエストのURL\n\n    try {\n      const response = await axios.post(`${url}/${displayedId}`, {\n        name: editedText,\n      });\n\n      console.log(\"サーバーからのレスポンス:\", response.data); // レスポンス内容をコンソール表示\n\n      setContents(prevContents =>\n        prevContents.map(content =>\n          content.id === selectedContentId\n            ? {\n                ...content,\n                name: response.data.name,\n                content: (\n                  <div className=\"todo-item\" key={content.id}>\n                    <div className=\"todo-text\">\n                      <p className=\"todo-paragraph\">{response.data.name}</p>\n                    </div>\n                    <div className=\"todo-buttons\">\n                      <Button variant=\"primary\" size=\"sm\" onClick={() => handleEdit(content.id, response.data.name)}>\n                        編集\n                      </Button>{' '}\n                      <Button onClick={() => handleDelete(content.id)} variant=\"danger\" size=\"sm\">\n                        削除\n                      </Button>\n                    </div>\n                  </div>\n                )\n              }\n            : content\n        )\n      );\n\n      setEditedText(''); // 編集テキストの入力内容をクリア\n      handleClose(); \n    } catch (error) {\n      console.error('POSTリクエストに失敗しました:', error);\n    }\n  };\n\n  // 新規追加時のテキストボックスの入力に応じてエラーメッセージをクリア\n  const handleAddTextChange = (e) => {\n    setAddText(e.target.value);\n    if (e.target.value !== \"\") {\n      setErrorMessage(''); \n    }\n  };\n\n  const handleChange = (e) => {\n    const newText = e.target.value;\n    setEditedText(newText);\n    if (newText !== \"\") {\n      setModalErrorMessage(''); \n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      onClickAdd();\n    }\n  };\n\n  return (\n    <section>\n      <Navbar className=\"custom-navbar bg-body-tertiary\" expand=\"lg\">\n        <Container className=\"navbar-container\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <div className=\"add-section\">\n        <div className=\"input-container\">\n          <input\n            type='text'\n            value={addText}\n            onChange={handleAddTextChange}\n            onKeyPress={handleKeyPress}\n            className=\"add-input\"\n          />\n        </div>\n        <Button onClick={onClickAdd} variant=\"info\">新規追加</Button>\n      </div>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <div className=\"todos-container\">\n        <div className=\"todos-header\">Todos</div>\n        {contents.map((content) => (\n          <div key={content.id}>\n            {content.content}\n          </div>\n        ))}\n      </div>\n      <div>\n        {displayedId && <p>編集対象のID: {displayedId}</p>} {/* 編集対象のIDを表示 */}\n        {editedText && <p>編集対象のNAME: {editedText}</p>} {/* 編集対象のNAMEを表示 */}\n      </div>\n      <EditModal\n        showModal={showModal}\n        handleClose={handleClose}\n        editedText={editedText}\n        handleChange={handleChange}\n        selectedContentId={selectedContentId}\n        setContents={setContents}\n        handleSave={handleSave}\n        isSaveButtonVisible={isSaveButtonVisible}\n        errorModalMessage={errorModalMessage}\n      />\n    </section>\n  );\n}\n\nexport default BasicExample;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}